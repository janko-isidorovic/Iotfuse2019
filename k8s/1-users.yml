apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: '7'
    labels: null
    name: users
    namespace: mainflux
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels: null
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations: null
        labels:
          app: users
      spec:
        containers:
        - env:
          - name: MF_USERS_DB
            value: users
          - name: MF_USERS_DB_HOST
            value: postgresql-users-iotfuse-postgresql.mainflux-postgresql
          - name: MF_USERS_DB_PASS
            value: mainflux
          - name: MF_USERS_DB_PORT
            value: '5432'
          - name: MF_USERS_DB_USER
            value: mainflux
          - name: MF_USERS_GRPC_PORT
            value: '8181'
          - name: MF_USERS_HTTP_PORT
            value: '8180'
          - name: MF_USERS_LOG_LEVEL
            value: debug
          - name: MF_USERS_SECRET
            value: secret
          image: mainflux/users:latest
          imagePullPolicy: Always
          name: users
          ports:
          - containerPort: 8180
            name: 8180tcp02
            protocol: TCP
          - containerPort: 8181
            name: 8181tcp02
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            procMount: Default
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30